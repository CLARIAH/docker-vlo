variables:
    GIT_SUBMODULE_STRATEGY: recursive
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
    # By default CLARIN build system releases images for linux/amd64,linux/arm64
    # set BUILD_PLATFORMS variable to override this:
    #
    # BUILD_PLATFORMS: "linux/amd64,linux/arm64,linux/arm/v7"

image: registry.gitlab.com/clarin-eric/build-image:1.3.4
services:
  - name: docker:24.0.6-dind

stages:
  - lint
  - build
  - test
  - security
  - release

lint-dockerfile:
  stage: lint
  script: timeout 1440 bash -x ./build.sh --lint-docker

shell-check:
  stage: lint
  script: timeout 1440 bash -x ./build.sh --lint-shell

build:
  artifacts:
    untracked: true
  script: timeout 1440 bash -x ./build.sh --build
  stage: build
  tags:
    - docker

#This stage scans for any vulnerability but will always pass.
#If a vulnerability is found, this will show with a yellow icon in the GitLab CI pipeline.
informative-vulnerability-scan:
  script: timeout 1440 bash -x ./build.sh --scan
  variables:
    SCAN_SEVERITY_THRESHOLD: "low"
  stage: security
  allow_failure: true
  tags:

#Fail this build if there is any vulnerability above the set threshold.
#Set the POLICY_FILE environment variable to include a snyk policy file to ignore specific vulnerabilities,
# e.g. SNYK_POLICY_FILE=.snyk"
normative-vulnerability-scan:
  script: timeout 1440 bash -x ./build.sh --scan
  # Security scan fail parameters.
  # See: https://gitlab.com/CLARIN-ERIC/docker-snyk-cli/-/blob/master/image/docker-entrypoint.sh?ref_type=heads#L10
  #   SCAN_SEVERITY_THRESHOLD, allowed values: <low|medium|high|critical>
  #   SCAN_FAIL_ON, allowed values: <all|upgradable|patchable>
  variables:
    SNYK_POLICY_FILE: ".snyk"
    SCAN_SEVERITY_THRESHOLD: "high"
    SCAN_FAIL_ON: "all"
  stage: security
  allow_failure: false
  tags:
    - docker

# Default http test for all images descending from CLARIN docker Alpine Supervisor base image
# Add/remove http(s) tests in checker.conf Format: <URL>;<Expected_HTTP_Status_Code>
# Add one test per line
# Remove or adapt for different image styles
test:
  dependencies:
    - build
  script: timeout 1440 bash -x ./build.sh --test
  stage: test
  tags:
    - docker

release:
  only:
    - tags
    - triggers
  script: timeout 1440 bash -x ./build.sh --release
  stage: release
  tags:
    - docker
