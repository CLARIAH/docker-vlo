#!/bin/sh
set -e

SOLR_PORT_WAIT_TIMEOUT="300"
SOLR_CHECK_INTERVAL="5"
SOLR_CHECK_PATH="fast?q=*:*&rows=0"

wait_for_solr() {
	HOST_PORT="$(echo "${VLO_DOCKER_SOLR_URL}" | sed -E 's_https?://([^/:]+:[0-9]+).*_\1_g')"
	echo "Checking/waiting for Solr service at ${HOST_PORT} (extracted from ${VLO_DOCKER_SOLR_URL}). Timeout: ${SOLR_PORT_WAIT_TIMEOUT}s"
	wait-for "${HOST_PORT}"  -t "${SOLR_PORT_WAIT_TIMEOUT}"
	
	SOLR_TEST_URL="${VLO_DOCKER_SOLR_URL}${SOLR_CHECK_PATH}"
	echo "Checking/wating for Solr response at ${SOLR_TEST_URL} (user: ${VLO_DOCKER_SOLR_USER_READ_ONLY})"
	while ! curl -lfs -u "${VLO_DOCKER_SOLR_USER_READ_ONLY}:${VLO_DOCKER_SOLR_PASSWORD_READ_ONLY}" "${SOLR_TEST_URL}" > /dev/null 2>&1; do
		echo "REST not available (yet). Exit code: $?"
		sleep "${SOLR_CHECK_INTERVAL}"
	done
	
	echo "Confirmed availability of REST service at ${SOLR_TEST_URL}"
}

filter_file() {
	TARGET_FILE=$1
	shift
	if [ -e "$TARGET_FILE" ]; then
		/bin/bash /opt/filter-config-file.sh  $TARGET_FILE $@
	else
		echo "ERROR: file not found, cannot filter: $TARGET_FILE"
		exit 1
	fi
}

# Filter VLO configuration
filter_file ${VLO_DOCKER_CONFIG_FILE} \
	VLO_DOCKER_SOLR_URL \
	VLO_DOCKER_SOLR_USER_READ_ONLY \
	VLO_DOCKER_SOLR_PASSWORD_READ_ONLY \
	VLO_DOCKER_SOLR_USER_READ_WRITE \
	VLO_DOCKER_SOLR_PASSWORD_READ_WRITE \
	VLO_DOCKER_PUBLIC_HOME_URL \
	VLO_DOCKER_MAPPING_BASE_URI \
	VLO_DOCKER_VALUE_MAPPING_URI \
	VLO_DOCKER_FILE_PROCESSING_THREADS \
	VLO_DOCKER_SOLR_THREADS \
	VLO_DOCKER_AVAILABILITY_STATUS_UPDATE_BATCH_SIZE \
	VLO_DOCKER_DELETE_ALL_FIRST \
	VLO_DOCKER_MAX_DAYS_IN_SOLR \
	VLO_DOCKER_DATAROOTS_FILE \
	VLO_DOCKER_VCR_MAXIMUM_ITEMS_COUNT \
	VLO_DOCKER_CONCEPT_REGISTRY_URL \
	VLO_DOCKER_VOCABULARY_REGISTRY_URL \
	VLO_DOCKER_FEEDBACK_FORM_URL \
	VLO_DOCKER_FCS_BASE_URL \
	VLO_DOCKER_LRS_BASE_URL \
	VLO_DOCKER_VCR_SUBMIT_ENDPOINT \
	VLO_DOCKER_LINK_CHECKER_DB_CONNECTION_STRING \
	VLO_DOCKER_LINK_CHECKER_DB_USER \
	VLO_DOCKER_LINK_CHECKER_DB_PASSWORD \
	VLO_DOCKER_CENTRE_REGISTRY_CENTRES_LIST_JSON_URL \
	VLO_DOCKER_CENTRE_REGISTRY_OAI_PMH_ENDPOINTS_LIST_JSON_URL \
	VLO_DOCKER_OTHER_PROVIDERS_MARKUP_FILE \
	VLO_DOCKER_EXPOSURE_ENABLED \
	VLO_DOCKER_EXPOSURE_DB_NAME \
	VLO_DOCKER_EXPOSURE_DB_HOST \
	VLO_DOCKER_EXPOSURE_DB_PORT \
	VLO_DOCKER_EXPOSURE_DB_USER \
	VLO_DOCKER_EXPOSURE_DB_PASSWORD

filter_file ${CATALINA_BASE}/conf/Catalina/localhost/ROOT.xml \
	VLO_DOCKER_CONFIG_FILE \
	VLO_DOCKER_WICKET_CONFIGURATION \
	VLO_DOCKER_WICKET_BOTTOM_SNIPPET_URL \
	VLO_DOCKER_PIWIK_ENABLE_TRACKER \
	VLO_DOCKER_PIWIK_SITE_ID \
	VLO_DOCKER_PIWIK_HOST \
	VLO_DOCKER_PIWIK_DOMAINS

# Tomcat env
filter_file ${CATALINA_BASE}/bin/setenv.sh \
	VLO_DOCKER_TOMCAT_JAVA_OPTS
	
# Importer
filter_file /opt/importer.sh \
	VLO_DOCKER_IMPORTER_JAVA_OPTS

# Update mapping definitions
if [ ! -z "${VLO_MAPPING_DEFINITIONS_DIST_URL}" ]; then
	cd "$VLO_MAPPING_DEFINITIONS_DIR" && \
	curl -L "${VLO_MAPPING_DEFINITIONS_DIST_URL}" | tar zxvf - --strip-components=1
else
	echo "Not retrieving VLO mapping definitions!"
fi

if [ "${VLO_DOCKER_SKIP_WAIT_FOR_SOLR}" = 'true' ]; then
	echo "NOT waiting for Solr (VLO_DOCKER_SKIP_WAIT_FOR_SOLR=${VLO_DOCKER_SKIP_WAIT_FOR_SOLR})"
else
	wait_for_solr
fi
